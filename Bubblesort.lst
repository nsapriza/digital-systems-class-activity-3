MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;**********************************************************************
                      00002 ;   This file is a basic code template for assembly code generation   *
                      00003 ;   on the PIC16F877A. This file contains the basic code              *
                      00004 ;   building blocks to build upon.                                    *  
                      00005 ;                                                                     *
                      00006 ;   Refer to the MPASM User's Guide for additional information on     *
                      00007 ;   features of the assembler (Document DS33014).                     *
                      00008 ;                                                                     *
                      00009 ;   Refer to the respective PIC data sheet for additional             *
                      00010 ;   information on the instruction set.                               *
                      00011 ;                                                                     *
                      00012 ;**********************************************************************
                      00013 ;                                                                     *
                      00014 ;    Filename:      Bubblesort.asm                                    *
                      00015 ;    Date:          03/06/2023                                                  *
                      00016 ;    File Version:  1                                                  *
                      00017 ;                                                                     *
                      00018 ;    Author:        Grupo xx                                                      *
                      00019 ;    Company:       Sistemas Digitales II                                             *
                      00020 ;                                                                     * 
                      00021 ;                                                                     *
                      00022 ;**********************************************************************
                      00023 ;                                                                     *
                      00024 ;    Files Required: P16F877A.INC                                     *
                      00025 ;                                                                     *
                      00026 ;**********************************************************************
                      00027 ;                                                                     *
                      00028 ;    Notes:                                                           *
                      00029 ;                                                                     *
                      00030 ;**********************************************************************
                      00031 
                      00032 
                      00033         list            p=16f877A       ; list directive to define processor
                      00034         #include        <p16f877A.inc>  ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2011 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00555         LIST
                      00035         
2007   3F3A           00036         __CONFIG _CP_OFF & _WDT_OFF & _BODEN_OFF & _PWRTE_OFF & _HS_OSC & _WRT_OFF & _LVP_OFF & _CPD_OFF
                      00037 
                      00038 ; '__CONFIG' directive is used to embed configuration data within .asm file.
                      00039 ; The lables following the directive are located in the respective .inc file.
                      00040 ; See respective data sheet for additional information on configuration word.
                      00041 
                      00042 
                      00043 
                      00044 ;***** VARIABLE DEFINITIONS
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000007D            00045 w_temp          EQU     0x7D            ; variable used for context saving 
  0000007E            00046 status_temp     EQU     0x7E            ; variable used for context saving
  0000007F            00047 pclath_temp     EQU     0x7F            ; variable used for context saving                      
                      00048 
                      00049 
                      00050 ;***** Bubblesort subroutine variables
                      00051 ; void Bubblesort (char Address_reg, char Length_reg); C code example
  00000020            00052 Address_reg     EQU     0x20    ;Bank0: 0x00 - 0x7F (128 registros), GPR: 0x20 - 0x7F, SFR: 0x00 - 0x1F 
                            (32 registros)
  00000021            00053 Length_reg      EQU     0x21
  00000022            00054 Counter         EQU 0x22        
  00000023            00055 i                       EQU 0x23
  00000001            00056 f                       EQU d'1'
  00000000            00057 w                       EQU d'0'
  00000024            00058 Flag            EQU 0x24        ;1 = true and 0 = false
  00000025            00059 Current         EQU 0x25
  00000026            00060 Swap_a          EQU 0x26
  00000027            00061 Swap_b          EQU 0x27
  00000028            00062 Swap_reg_a      EQU 0x28
  00000029            00063 Swap_reg_b      EQU 0x29
  0000002A            00064 gpr0            EQU 0x2A
                      00065 
                      00066 ;**********************************************************************
0000                  00067         ORG     0x000           ; processor reset vector
                      00068 
0000   0000           00069         nop                                             ; nop required for icd
0001   2810           00070         goto    main            ; go to beginning of program
                      00071 
                      00072 
0004                  00073         ORG     0x004           ; interrupt vector location
                      00074 
0004   00FD           00075         movwf   w_temp          ; save off current W register contents
0005   0803           00076         movf    STATUS,w        ; move status register into W register
0006   00FE           00077         movwf   status_temp     ; save off contents of STATUS register
0007   080A           00078         movf    PCLATH,w                ; move pclath register into w register
0008   00FF           00079         movwf   pclath_temp             ; save off contents of PCLATH register
                      00080 
                      00081 ; isr code can go here or be located as a call subroutine elsewhere
                      00082 
0009   087F           00083         movf    pclath_temp,w   ; retrieve copy of PCLATH register
000A   008A           00084         movwf   PCLATH                  ; restore pre-isr PCLATH register contents
000B   087E           00085         movf    status_temp,w   ; retrieve copy of STATUS register
000C   0083           00086         movwf   STATUS          ; restore pre-isr STATUS register contents
000D   0EFD           00087         swapf   w_temp,f
000E   0E7D           00088         swapf   w_temp,w        ; restore pre-isr W register contents
000F   0009           00089         retfie                  ; return from interrupt
                      00090 
                      00091 
                      00092 
0010                  00093 main
                      00094 
0010   2060           00095         call    Load_TestVector0
                      00096 ;       call    Load_TestVector1
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;       call    Load_TestVector2
                      00098 
0011   2013           00099         call    Bubblesort
                      00100 
                      00101 
0012                  00102 loop
0012   2812           00103         goto    loop
                      00104 
                      00105 ;************************
                      00106 ;     reference table   *
                      00107 ;************************
                      00108 ;Address_reg    EQU     0x20
                      00109 ;Length_reg     EQU     0x21
                      00110 ;Counter                EQU 0x22        
                      00111 ;i                          EQU 0x22
                      00112 ;f                              EQU d'1'
                      00113 ;w                              EQU d'0'
                      00114 ;Flag                   EQU 0x24
                      00115 ;Current                EQU 0x25
                      00116 
                      00117 
                      00118 ; Bubblesort subroutine - begin
0013                  00119 Bubblesort
                      00120         ;set "not done" flag to true
0013   1024           00121         bcf Flag, 0     ;clear flag
0014   1424           00122         bsf Flag, 0     ;set flag to true
0015                  00123 Whileloop
0015   1C24           00124         btfss Flag, 0   ;test flag, skip if set
0016   0008           00125         return                  ;flag is false -> list is sorted -> return
                      00126         
                      00127         ;set counter to array length
0017   0821           00128         movf  Length_reg, w ;Length -> W
0018   00A2           00129         movwf Counter           ;W -> counter
                      00130 
                      00131         ;set counter to array length -1                                                                 
                                                                                    (needs work)
0019   0103           00132         clrw                            ;clear W
001A   3E01           00133         addlw d'1'                      ;add 1 to W
001B   02A2           00134         subwf Counter, f        ;subtract W from counter
                      00135 
                      00136         ;set i to 0
001C   01A3           00137         clrf i                          ;clear i
                      00138 
001D                  00139 Forloop 
001D   203B           00140         call i_is_at_Length_reg
                      00141         
                      00142         ;set i to i + 1                                                                                 
                                                                                                    (needs work)
001E   0823           00143         movf i,w                        ;i -> W
001F   3E01           00144         addlw d'1'                      ;add 1 to W
0020   00A3           00145         movwf i                         ;w -> i
                      00146 
                      00147         ;set Current to array value at position array start + i 
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0021   0820           00148         movf Address_reg,w      ;Address_reg -> W
0022   0723           00149         addwf i,w               ;add i to W
0023   0084           00150         movwf FSR                       ;W -> FSR
0024   0800           00151         movf INDF,w                     ;(first vector + i) value -> W
0025   00A5           00152         movwf Current           ;W -> Current
                      00153 
                      00154         ;set W to array value at position array start + i -1
0026   0820           00155         movf Address_reg,w      ;Address_reg -> W
0027   0723           00156         addwf i,w               ;add i to w
0028   0084           00157         movwf FSR                       ;W -> FSR
0029   0384           00158         decf FSR,f                      ;subtract 1 from FSR
002A   0800           00159         movf INDF,w                     ;(first vector - 1) value -> W
                      00160         
                      00161         ;test if Current > W
002B   02A5           00162         subwf Current, f        ;subtract w from Current
002C   1FA5           00163         btfss Current, 7        ;test MSB, skip if Current is +
002D   2836           00164         goto Decrement_counter
                      00165         
                      00166         ;swap Current and W                                                                             
                                                                                                    (needs work)
002E   0820           00167         movf Address_reg,w      ;Address_reg -> W
002F   0723           00168         addwf i,w               ;add i to W
0030   00A6           00169         movwf Swap_a            ;W -> Swap_a    
0031   0820           00170         movf Address_reg,w      ;Address_reg -> W
0032   0723           00171         addwf i,w               ;add i to w     
0033   00A7           00172         movwf Swap_b            ;W -> Swap_b
0034   03A7           00173         decf Swap_b,f           ;decriment Swap_b       
0035   2051           00174         call Swap_a_and_b       ;call subroutine SwapAB
                      00175 
0036                  00176 Decrement_counter
0036   0BA2           00177         decfsz Counter,f        ;decrement Counter 
0037   281D           00178         goto Forloop            ;if Counter is 0 go to Forloop
0038   2839           00179         goto fail                       ;else go to faill
                      00180 
0039                  00181 fail
0039   1024           00182         bcf Flag,0                      ;set "not done" flag to false
003A   2815           00183         goto Whileloop          ;go to Whileloop to terminate subroutine
                      00184 
003B                  00185 i_is_at_Length_reg
                      00186         ;set gpr to Length_reg - 1
003B   0821           00187         movf Length_reg,w       
003C   00AA           00188         movwf gpr0              
003D   03AA           00189         decf gpr0,f
                      00190         
                      00191         ;subtract i from gpr0
003E   0823           00192         movf i,w                
003F   022A           00193         subwf gpr0,w    
                      00194         
0040   182A           00195         btfsc gpr0,0                                                                                    
                                                                    ;(needs work) (can change to add1 decfsz)
0041   0008           00196         return                  
0042   18AA           00197         btfsc gpr0,1    
0043   0008           00198         return                  
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0044   192A           00199         btfsc gpr0,2    
0045   0008           00200         return                  
0046   19AA           00201         btfsc gpr0,3    
0047   0008           00202         return                  
0048   1A2A           00203         btfsc gpr0,4
0049   0008           00204         return
004A   1AAA           00205         btfsc gpr0,5
004B   0008           00206         return
004C   1B2A           00207         btfsc gpr0,6
004D   0008           00208         return
004E   1BAA           00209         btfsc gpr0,7
004F   0008           00210         return
0050   2815           00211         goto Whileloop
                      00212 ; Bubblesort subroutine - end
                      00213 
                      00214 ;swap subroutine - start
0051                  00215 Swap_a_and_b
0051   0826           00216         movf Swap_a,w           ; Swap_a -> W
0052   0084           00217         movwf FSR                       ; W -> FSR
0053   0800           00218         movf INDF,w                     ; Swap_a value -> W
0054   00A8           00219         movwf Swap_reg_a        ; W -> Swap_reg
0055   0827           00220         movf Swap_b,w
0056   0084           00221         movwf FSR
0057   0800           00222         movf INDF,w
0058   00A9           00223         movwf Swap_reg_b
0059   0828           00224         movf Swap_reg_a,w
005A   0080           00225         movwf INDF
005B   0826           00226         movf Swap_a,w           ; Swap_a -> W
005C   0084           00227         movwf FSR                       ; W -> FSR
005D   0829           00228         movf Swap_reg_b,w
005E   0080           00229         movwf INDF
005F   0008           00230         return
                      00231 
                      00232 
                      00233 ; Load TestVector0 - begin
0060                  00234 Load_TestVector0
0060   3001           00235         movlw   d'1'                    ; W <- d'1'
0061   00C0           00236         movwf   0x40                    ; (0x40) <- W
0062   3017           00237         movlw   d'23'                   ; W <- d'23'
0063   00C1           00238         movwf   0x41                    ; (0x41) <- W
0064   302A           00239         movlw   d'42'                   ; W <- d'42'
0065   00C2           00240         movwf   0x42                    ; (0x42) <- W
0066   3000           00241         movlw   d'0'                    ; W <- d'0'
0067   00C3           00242         movwf   0x43                    ; (0x43) <- W
0068   304D           00243         movlw   d'77'                   ; W <- d'77'
0069   00C4           00244         movwf   0x44                    ; (0x44) <- W
006A   3027           00245         movlw   d'39'                   ; W <- d'39'
006B   00C5           00246         movwf   0x45                    ; (0x45) <- W
006C   3078           00247         movlw   d'120'                  ; W <- d'120'
006D   00C6           00248         movwf   0x46                    ; (0x46) <- W
006E   307F           00249         movlw   d'127'                  ; W <- d'127'
006F   00C7           00250         movwf   0x47                    ; (0x47) <- W
                      00251 
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0070   3040           00252         movlw   0x40                    ; Address_reg is loadad with the address where the first data is
                             positioned
0071   00A0           00253         movwf   Address_reg
0072   3008           00254         movlw   d'8'                    ; Length_reg is loaded with the legnth of data
0073   00A1           00255         movwf   Length_reg
                      00256 
0074   0008           00257         return
                      00258 ; Load TestVector0 - end
                      00259 
                      00260 
                      00261 ; Load TestVector1 - begin
0075                  00262 Load_TestVector1
0075   3001           00263         movlw   d'1'                    ; W <- d'1'
0076   00C0           00264         movwf   0x40                    ; (0x40) <- W
0077   3017           00265         movlw   d'23'                   ; W <- d'23'
0078   00C1           00266         movwf   0x41                    ; (0x41) <- W
0079   302A           00267         movlw   d'42'                   ; W <- d'42'
007A   00C2           00268         movwf   0x42                    ; (0x42) <- W
007B   3000           00269         movlw   d'0'                    ; W <- d'0'
007C   00C3           00270         movwf   0x43                    ; (0x43) <- W
007D   3046           00271         movlw   d'70'                   ; W <- d'77'
007E   00C4           00272         movwf   0x44                    ; (0x44) <- W
007F   3027           00273         movlw   d'39'                   ; W <- d'39'
0080   00C5           00274         movwf   0x45                    ; (0x45) <- W
0081   3078           00275         movlw   d'120'                  ; W <- d'120'
0082   00C6           00276         movwf   0x46                    ; (0x46) <- W
0083   307F           00277         movlw   d'127'                  ; W <- d'127'
0084   00C7           00278         movwf   0x47                    ; (0x47) <- W
0085   300F           00279         movlw   d'15'                   ; W <- d'15'
0086   00C8           00280         movwf   0x48                    ; (0x48) <- W
0087   305D           00281         movlw   d'93'                   ; W <- d'93'
0088   00C9           00282         movwf   0x49                    ; (0x49) <- W
0089   300E           00283         movlw   d'14'                   ; W <- d'14'
008A   00CA           00284         movwf   0x4A                    ; (0x4A) <- W
008B   3046           00285         movlw   d'70'                   ; W <- d'70'
008C   00CB           00286         movwf   0x4B                    ; (0x4B) <- W
008D   3055           00287         movlw   d'85'                   ; W <- d'85'
008E   00CC           00288         movwf   0x4C                    ; (0x4C) <- W
008F   300F           00289         movlw   d'15'                   ; W <- d'15'
0090   00CD           00290         movwf   0x4D                    ; (0x4D) <- W
0091   3020           00291         movlw   d'32'                   ; W <- d'32'
0092   00CE           00292         movwf   0x4E                    ; (0x4E) <- W
0093   3078           00293         movlw   d'120'                  ; W <- d'120'
0094   00CF           00294         movwf   0x4F                    ; (0x4F) <- W
                      00295 
0095   3040           00296         movlw   0x40                    ; Address_reg is loadad with the address where the first data is
                             positioned
0096   00A0           00297         movwf   Address_reg
0097   3010           00298         movlw   d'16'                   ; Length_reg is loaded with the legnth of data
0098   00A1           00299         movwf   Length_reg
                      00300 
0099   0008           00301         return
                      00302 ; Load TestVector1 - end
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00303 
                      00304 
                      00305 ; Load TestVector2 - begin
009A                  00306 Load_TestVector2
009A   3020           00307         movlw   d'32'                   ; W <- d'32'
009B   00C0           00308         movwf   0x40                    ; (0x40) <- W
                      00309 
009C   3040           00310         movlw   0x40                    ; Address_reg is loadad with the address where the first data is
                             positioned
009D   00A0           00311         movwf   Address_reg
009E   3001           00312         movlw   d'1'                    ; Length_reg is loaded with the legnth of data
009F   00A1           00313         movwf   Length_reg
                      00314 
00A0   0008           00315         return
                      00316 ; Load TestVector2 - end
                      00317 
                      00318         END                       ; directive 'end of program'
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE  8


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
Address_reg                       00000020
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
Bubblesort                        00000013
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
Counter                           00000022
Current                           00000025
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Decrement_counter                 00000036
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
Flag                              00000024
Forloop                           0000001D
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Length_reg                        00000021
Load_TestVector0                  00000060
Load_TestVector1                  00000075
Load_TestVector2                  0000009A
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Swap_a                            00000026
Swap_a_and_b                      00000051
Swap_b                            00000027
Swap_reg_a                        00000028
Swap_reg_b                        00000029
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE 13


SYMBOL TABLE
  LABEL                             VALUE 

TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE 14


SYMBOL TABLE
  LABEL                             VALUE 

WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Whileloop                         00000015
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
__DEBUG                           1
f                                 00000001
fail                              00000039
gpr0                              0000002A
i                                 00000023
i_is_at_Length_reg                0000003B
loop                              00000012
main                              00000010
pclath_temp                       0000007F
status_temp                       0000007E
w                                 00000000
w_temp                            0000007D
MPASM  5.40                    BUBBLESORT.ASM   6-4-2023  15:15:16         PAGE 15


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : XX--XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX X--------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   159
Program Memory Words Free:  8033


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

